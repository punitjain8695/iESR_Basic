
Line_Follower_Darkline.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000118  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000016c  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  0000018c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000142  00000000  00000000  000001a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000ae  00000000  00000000  000002e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000017a  00000000  00000000  00000397  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000514  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000ca  00000000  00000000  00000534  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e1       	ldi	r30, 0x18	; 24
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 30       	cpi	r26, 0x00	; 0
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 67 00 	call	0xce	; 0xce <main>
  c6:	0c 94 8a 00 	jmp	0x114	; 0x114 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

000000ce <main>:
#include<avr/io.h>
#define F_CPU 16000000UL
#include<util/delay.h>
main()
{
  ce:	1a ba       	out	0x1a, r1	; 26
DDRA=0;
DDRB=255;
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	87 bb       	out	0x17, r24	; 23
while(1)
{
if(((PINA & 0x01) == 0x01) && ((PINA & 0x02) == 0x02))
{
PORTB=0b00000101;
  d4:	65 e0       	ldi	r22, 0x05	; 5
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  d6:	20 e2       	ldi	r18, 0x20	; 32
  d8:	3e e4       	ldi	r19, 0x4E	; 78
PORTB=0b00000001;
_delay_ms(5);
}
else if(((PINA & 0x01) == 0x00) && ((PINA & 0x02) == 0x02))
{
PORTB=0b00000100;
  da:	54 e0       	ldi	r21, 0x04	; 4
PORTB=0b00000101;
_delay_ms(5);
}
else if(((PINA & 0x01) == 0x01) && ((PINA & 0x02) == 0x00))
{
PORTB=0b00000001;
  dc:	41 e0       	ldi	r20, 0x01	; 1
{
DDRA=0;
DDRB=255;
while(1)
{
if(((PINA & 0x01) == 0x01) && ((PINA & 0x02) == 0x02))
  de:	c8 9b       	sbis	0x19, 0	; 25
  e0:	04 c0       	rjmp	.+8      	; 0xea <main+0x1c>
  e2:	c9 9b       	sbis	0x19, 1	; 25
  e4:	02 c0       	rjmp	.+4      	; 0xea <main+0x1c>
{
PORTB=0b00000101;
  e6:	68 bb       	out	0x18, r22	; 24
  e8:	11 c0       	rjmp	.+34     	; 0x10c <main+0x3e>
_delay_ms(5);
}
else if(((PINA & 0x01) == 0x01) && ((PINA & 0x02) == 0x00))
  ea:	c8 9b       	sbis	0x19, 0	; 25
  ec:	04 c0       	rjmp	.+8      	; 0xf6 <main+0x28>
  ee:	c9 99       	sbic	0x19, 1	; 25
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <main+0x28>
{
PORTB=0b00000001;
  f2:	48 bb       	out	0x18, r20	; 24
  f4:	0b c0       	rjmp	.+22     	; 0x10c <main+0x3e>
_delay_ms(5);
}
else if(((PINA & 0x01) == 0x00) && ((PINA & 0x02) == 0x02))
  f6:	c8 99       	sbic	0x19, 0	; 25
  f8:	04 c0       	rjmp	.+8      	; 0x102 <main+0x34>
  fa:	c9 9b       	sbis	0x19, 1	; 25
  fc:	02 c0       	rjmp	.+4      	; 0x102 <main+0x34>
{
PORTB=0b00000100;
  fe:	58 bb       	out	0x18, r21	; 24
 100:	05 c0       	rjmp	.+10     	; 0x10c <main+0x3e>
_delay_ms(5);
}
else if(((PINA & 0x01) == 0x00) && ((PINA & 0x02) == 0x00))
 102:	c8 99       	sbic	0x19, 0	; 25
 104:	ec cf       	rjmp	.-40     	; 0xde <main+0x10>
 106:	c9 99       	sbic	0x19, 1	; 25
 108:	ea cf       	rjmp	.-44     	; 0xde <main+0x10>
{
PORTB=0b00000000;
 10a:	18 ba       	out	0x18, r1	; 24
 10c:	c9 01       	movw	r24, r18
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <main+0x40>
 112:	e5 cf       	rjmp	.-54     	; 0xde <main+0x10>

00000114 <_exit>:
 114:	f8 94       	cli

00000116 <__stop_program>:
 116:	ff cf       	rjmp	.-2      	; 0x116 <__stop_program>
