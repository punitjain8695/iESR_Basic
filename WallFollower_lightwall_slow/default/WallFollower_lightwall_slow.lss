
WallFollower_lightwall_slow.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000130  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000184  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000001a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000212  00000000  00000000  000001bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000de  00000000  00000000  000003d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000001d4  00000000  00000000  000004af  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000684  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000d4  00000000  00000000  000006a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000100  00000000  00000000  00000778  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000090  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e3       	ldi	r30, 0x30	; 48
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 30       	cpi	r26, 0x00	; 0
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 67 00 	call	0xce	; 0xce <main>
  c6:	0c 94 96 00 	jmp	0x12c	; 0x12c <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

000000ce <main>:
#include<avr/io.h>
#define F_CPU 16000000UL
#include<util/delay.h>
main()
{
  ce:	1a ba       	out	0x1a, r1	; 26
int p= 5,n=10;
DDRA=0;
DDRB=255;
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	87 bb       	out	0x17, r24	; 23
while(1)
{
if(((PINA & 0x01) == 0x01) && ((PINA & 0x02) == 0x00))
{
PORTB=0b00000101;
  d4:	e5 e0       	ldi	r30, 0x05	; 5
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  d6:	40 e2       	ldi	r20, 0x20	; 32
  d8:	5e e4       	ldi	r21, 0x4E	; 78
PORTB=0;
_delay_ms(n);
}
if(((PINA & 0x01) == 0x01) && ((PINA & 0x02) == 0x02) )
{
PORTB=0b00000001;
  da:	20 e4       	ldi	r18, 0x40	; 64
  dc:	3c e9       	ldi	r19, 0x9C	; 156
  de:	71 e0       	ldi	r23, 0x01	; 1
PORTB=0;
_delay_ms(n);
}
if(((PINA & 0x01) == 0x00) && ((PINA & 0x02) == 0x00))
{
PORTB=0b00000100;
  e0:	64 e0       	ldi	r22, 0x04	; 4
int p= 5,n=10;
DDRA=0;
DDRB=255;
while(1)
{
if(((PINA & 0x01) == 0x01) && ((PINA & 0x02) == 0x00))
  e2:	c8 9b       	sbis	0x19, 0	; 25
  e4:	0a c0       	rjmp	.+20     	; 0xfa <main+0x2c>
  e6:	c9 99       	sbic	0x19, 1	; 25
  e8:	08 c0       	rjmp	.+16     	; 0xfa <main+0x2c>
{
PORTB=0b00000101;
  ea:	e8 bb       	out	0x18, r30	; 24
  ec:	ca 01       	movw	r24, r20
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <main+0x20>
_delay_ms(p);
PORTB=0;
  f2:	18 ba       	out	0x18, r1	; 24
  f4:	c9 01       	movw	r24, r18
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <main+0x28>
_delay_ms(n);
}
if(((PINA & 0x01) == 0x01) && ((PINA & 0x02) == 0x02) )
  fa:	c8 9b       	sbis	0x19, 0	; 25
  fc:	0a c0       	rjmp	.+20     	; 0x112 <main+0x44>
  fe:	c9 9b       	sbis	0x19, 1	; 25
 100:	08 c0       	rjmp	.+16     	; 0x112 <main+0x44>
{
PORTB=0b00000001;
 102:	78 bb       	out	0x18, r23	; 24
 104:	ca 01       	movw	r24, r20
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <main+0x38>
_delay_ms(p);
PORTB=0;
 10a:	18 ba       	out	0x18, r1	; 24
 10c:	c9 01       	movw	r24, r18
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <main+0x40>
_delay_ms(n);
}
if(((PINA & 0x01) == 0x00) && ((PINA & 0x02) == 0x00))
 112:	c8 99       	sbic	0x19, 0	; 25
 114:	e6 cf       	rjmp	.-52     	; 0xe2 <main+0x14>
 116:	c9 99       	sbic	0x19, 1	; 25
 118:	e4 cf       	rjmp	.-56     	; 0xe2 <main+0x14>
{
PORTB=0b00000100;
 11a:	68 bb       	out	0x18, r22	; 24
 11c:	ca 01       	movw	r24, r20
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <main+0x50>
_delay_ms(p);
PORTB=0;
 122:	18 ba       	out	0x18, r1	; 24
 124:	c9 01       	movw	r24, r18
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <main+0x58>
 12a:	db cf       	rjmp	.-74     	; 0xe2 <main+0x14>

0000012c <_exit>:
 12c:	f8 94       	cli

0000012e <__stop_program>:
 12e:	ff cf       	rjmp	.-2      	; 0x12e <__stop_program>
