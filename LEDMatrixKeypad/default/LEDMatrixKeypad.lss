
LEDMatrixKeypad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000027c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000003d  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000083a  00000000  00000000  0000032d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000104  00000000  00000000  00000b67  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000581  00000000  00000000  00000c6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000070  00000000  00000000  000011ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000ca  00000000  00000000  0000125c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000318  00000000  00000000  00001326  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 000000a8  00000000  00000000  0000163e  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e7       	ldi	r30, 0x7C	; 124
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 a9 00 	call	0x152	; 0x152 <main>
  8a:	0c 94 3c 01 	jmp	0x278	; 0x278 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Al>:
#define F_CPU 16000000UL
#include<util/delay.h>


void Al()
{
  92:	8e ef       	ldi	r24, 0xFE	; 254
  94:	8b bb       	out	0x1b, r24	; 27
PORTA=0b11111110;
PORTB=0b11011110;
  96:	8e ed       	ldi	r24, 0xDE	; 222
  98:	88 bb       	out	0x18, r24	; 24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  9a:	20 ea       	ldi	r18, 0xA0	; 160
  9c:	3f e0       	ldi	r19, 0x0F	; 15
  9e:	c9 01       	movw	r24, r18
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <Al+0xe>
_delay_ms(1);
PORTA=0b00010001;
  a4:	81 e1       	ldi	r24, 0x11	; 17
  a6:	8b bb       	out	0x1b, r24	; 27
PORTB=0b11100001;
  a8:	81 ee       	ldi	r24, 0xE1	; 225
  aa:	88 bb       	out	0x18, r24	; 24
  ac:	c9 01       	movw	r24, r18
  ae:	01 97       	sbiw	r24, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <Al+0x1c>
_delay_ms(1);
}
  b2:	08 95       	ret

000000b4 <Bl>:

void Bl()
{
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	8b bb       	out	0x1b, r24	; 27
PORTA=0b11111111;
PORTB=0b11111110;
  b8:	8e ef       	ldi	r24, 0xFE	; 254
  ba:	88 bb       	out	0x18, r24	; 24
  bc:	20 ea       	ldi	r18, 0xA0	; 160
  be:	3f e0       	ldi	r19, 0x0F	; 15
  c0:	c9 01       	movw	r24, r18
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <Bl+0xe>
_delay_ms(1);
PORTA=0b01101110;
  c6:	8e e6       	ldi	r24, 0x6E	; 110
  c8:	8b bb       	out	0x1b, r24	; 27
PORTB=0b11011111;
  ca:	8f ed       	ldi	r24, 0xDF	; 223
  cc:	88 bb       	out	0x18, r24	; 24
  ce:	c9 01       	movw	r24, r18
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <Bl+0x1c>
_delay_ms(1);
PORTA=0b10010001;
  d4:	81 e9       	ldi	r24, 0x91	; 145
  d6:	8b bb       	out	0x1b, r24	; 27
PORTB=0b11100001;
  d8:	81 ee       	ldi	r24, 0xE1	; 225
  da:	88 bb       	out	0x18, r24	; 24
  dc:	c9 01       	movw	r24, r18
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <Bl+0x2a>
_delay_ms(1);
}
  e2:	08 95       	ret

000000e4 <Cl>:

void Cl()
{
  e4:	8e e7       	ldi	r24, 0x7E	; 126
  e6:	8b bb       	out	0x1b, r24	; 27
PORTA=0b01111110;
PORTB=0b11111110;
  e8:	8e ef       	ldi	r24, 0xFE	; 254
  ea:	88 bb       	out	0x18, r24	; 24
  ec:	20 ea       	ldi	r18, 0xA0	; 160
  ee:	3f e0       	ldi	r19, 0x0F	; 15
  f0:	c9 01       	movw	r24, r18
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <Cl+0xe>
_delay_ms(1);
PORTA=0b10000001;
  f6:	81 e8       	ldi	r24, 0x81	; 129
  f8:	8b bb       	out	0x1b, r24	; 27
PORTB=0b11100001;
  fa:	81 ee       	ldi	r24, 0xE1	; 225
  fc:	88 bb       	out	0x18, r24	; 24
  fe:	c9 01       	movw	r24, r18
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <Cl+0x1c>
_delay_ms(1);
PORTA=0b01000010;
 104:	82 e4       	ldi	r24, 0x42	; 66
 106:	8b bb       	out	0x1b, r24	; 27
PORTB=0b11011111;
 108:	8f ed       	ldi	r24, 0xDF	; 223
 10a:	88 bb       	out	0x18, r24	; 24
 10c:	c9 01       	movw	r24, r18
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <Cl+0x2a>
_delay_ms(1);
}
 112:	08 95       	ret

00000114 <Dl>:

void Dl()
{
 114:	8f ef       	ldi	r24, 0xFF	; 255
 116:	8b bb       	out	0x1b, r24	; 27
PORTA=0b11111111;
PORTB=0b11111110;
 118:	8e ef       	ldi	r24, 0xFE	; 254
 11a:	88 bb       	out	0x18, r24	; 24
 11c:	20 ea       	ldi	r18, 0xA0	; 160
 11e:	3f e0       	ldi	r19, 0x0F	; 15
 120:	c9 01       	movw	r24, r18
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <Dl+0xe>
_delay_ms(1);
PORTA=0b10000001;
 126:	81 e8       	ldi	r24, 0x81	; 129
 128:	8b bb       	out	0x1b, r24	; 27
PORTB=0b11100001;
 12a:	81 ee       	ldi	r24, 0xE1	; 225
 12c:	88 bb       	out	0x18, r24	; 24
 12e:	c9 01       	movw	r24, r18
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <Dl+0x1c>
_delay_ms(1);
PORTA=0b01111110;
 134:	8e e7       	ldi	r24, 0x7E	; 126
 136:	8b bb       	out	0x1b, r24	; 27
PORTB=0b11011111;
 138:	8f ed       	ldi	r24, 0xDF	; 223
 13a:	88 bb       	out	0x18, r24	; 24
 13c:	c9 01       	movw	r24, r18
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <Dl+0x2a>
_delay_ms(1);
}
 142:	08 95       	ret

00000144 <l>:

void l()
{
 144:	1b ba       	out	0x1b, r1	; 27
PORTA=0;
PORTB=0;
 146:	18 ba       	out	0x18, r1	; 24
 148:	80 ea       	ldi	r24, 0xA0	; 160
 14a:	9f e0       	ldi	r25, 0x0F	; 15
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <l+0x8>
_delay_ms(1);
}
 150:	08 95       	ret

00000152 <main>:


void main()
{
 152:	ef 92       	push	r14
 154:	ff 92       	push	r15
 156:	0f 93       	push	r16
 158:	1f 93       	push	r17
DDRA=255;
 15a:	8f ef       	ldi	r24, 0xFF	; 255
 15c:	8a bb       	out	0x1a, r24	; 26
DDRB=255;
 15e:	87 bb       	out	0x17, r24	; 23
DDRD=0xf0;
 160:	80 ef       	ldi	r24, 0xF0	; 240
 162:	81 bb       	out	0x11, r24	; 17
while(1)
{
PORTD=0xef;
 164:	9f ee       	ldi	r25, 0xEF	; 239
 166:	e9 2e       	mov	r14, r25
 168:	20 ea       	ldi	r18, 0xA0	; 160
 16a:	3f e0       	ldi	r19, 0x0F	; 15
#include<util/delay.h>


void Al()
{
PORTA=0b11111110;
 16c:	5e ef       	ldi	r21, 0xFE	; 254
PORTB=0b11011110;
 16e:	8e ed       	ldi	r24, 0xDE	; 222
 170:	f8 2e       	mov	r15, r24
_delay_ms(1);
PORTA=0b00010001;
 172:	01 e1       	ldi	r16, 0x11	; 17
PORTB=0b11100001;
 174:	41 ee       	ldi	r20, 0xE1	; 225
_delay_ms(1);
}

void Bl()
{
PORTA=0b11111111;
 176:	ff ef       	ldi	r31, 0xFF	; 255
PORTB=0b11111110;
_delay_ms(1);
PORTA=0b01101110;
 178:	1e e6       	ldi	r17, 0x6E	; 110
PORTB=0b11011111;
 17a:	6f ed       	ldi	r22, 0xDF	; 223
_delay_ms(1);
PORTA=0b10010001;
 17c:	b1 e9       	ldi	r27, 0x91	; 145
_delay_ms(1);
}

void Cl()
{
PORTA=0b01111110;
 17e:	ee e7       	ldi	r30, 0x7E	; 126
PORTB=0b11111110;
_delay_ms(1);
PORTA=0b10000001;
 180:	71 e8       	ldi	r23, 0x81	; 129
PORTB=0b11100001;
_delay_ms(1);
PORTA=0b01000010;
 182:	a2 e4       	ldi	r26, 0x42	; 66
DDRA=255;
DDRB=255;
DDRD=0xf0;
while(1)
{
PORTD=0xef;
 184:	e2 ba       	out	0x12, r14	; 18
 186:	80 e4       	ldi	r24, 0x40	; 64
 188:	9c e9       	ldi	r25, 0x9C	; 156
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <main+0x38>
_delay_ms(10);
if((PIND&0x01)==0)
 18e:	80 9b       	sbis	0x10, 0	; 16
 190:	06 c0       	rjmp	.+12     	; 0x19e <main+0x4c>
 192:	16 c0       	rjmp	.+44     	; 0x1c0 <main+0x6e>
_delay_ms(1);
}

void l()
{
PORTA=0;
 194:	1b ba       	out	0x1b, r1	; 27
PORTB=0;
 196:	18 ba       	out	0x18, r1	; 24
 198:	c9 01       	movw	r24, r18
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <main+0x48>
{
PORTD=0xef;
_delay_ms(10);
if((PIND&0x01)==0)
{
while((PIND&0x01)==0)
 19e:	80 9b       	sbis	0x10, 0	; 16
 1a0:	f9 cf       	rjmp	.-14     	; 0x194 <main+0x42>
 1a2:	0a c0       	rjmp	.+20     	; 0x1b8 <main+0x66>
#include<util/delay.h>


void Al()
{
PORTA=0b11111110;
 1a4:	5b bb       	out	0x1b, r21	; 27
PORTB=0b11011110;
 1a6:	f8 ba       	out	0x18, r15	; 24
 1a8:	c9 01       	movw	r24, r18
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <main+0x58>
_delay_ms(1);
PORTA=0b00010001;
 1ae:	0b bb       	out	0x1b, r16	; 27
PORTB=0b11100001;
 1b0:	48 bb       	out	0x18, r20	; 24
 1b2:	c9 01       	movw	r24, r18
 1b4:	01 97       	sbiw	r24, 0x01	; 1
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <main+0x62>
{
while((PIND&0x01)==0)
{
l();
}
while((PIND&0x0f)==0x0f)
 1b8:	80 b3       	in	r24, 0x10	; 16
 1ba:	8f 70       	andi	r24, 0x0F	; 15
 1bc:	8f 30       	cpi	r24, 0x0F	; 15
 1be:	91 f3       	breq	.-28     	; 0x1a4 <main+0x52>
{
Al();
}
}
if((PIND&0x02)==0)
 1c0:	81 9b       	sbis	0x10, 1	; 16
 1c2:	06 c0       	rjmp	.+12     	; 0x1d0 <main+0x7e>
 1c4:	1b c0       	rjmp	.+54     	; 0x1fc <main+0xaa>
_delay_ms(1);
}

void l()
{
PORTA=0;
 1c6:	1b ba       	out	0x1b, r1	; 27
PORTB=0;
 1c8:	18 ba       	out	0x18, r1	; 24
 1ca:	c9 01       	movw	r24, r18
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <main+0x7a>
Al();
}
}
if((PIND&0x02)==0)
{
while((PIND&0x02)==0)
 1d0:	81 9b       	sbis	0x10, 1	; 16
 1d2:	f9 cf       	rjmp	.-14     	; 0x1c6 <main+0x74>
 1d4:	0f c0       	rjmp	.+30     	; 0x1f4 <main+0xa2>
_delay_ms(1);
}

void Bl()
{
PORTA=0b11111111;
 1d6:	fb bb       	out	0x1b, r31	; 27
PORTB=0b11111110;
 1d8:	58 bb       	out	0x18, r21	; 24
 1da:	c9 01       	movw	r24, r18
 1dc:	01 97       	sbiw	r24, 0x01	; 1
 1de:	f1 f7       	brne	.-4      	; 0x1dc <main+0x8a>
_delay_ms(1);
PORTA=0b01101110;
 1e0:	1b bb       	out	0x1b, r17	; 27
PORTB=0b11011111;
 1e2:	68 bb       	out	0x18, r22	; 24
 1e4:	c9 01       	movw	r24, r18
 1e6:	01 97       	sbiw	r24, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <main+0x94>
_delay_ms(1);
PORTA=0b10010001;
 1ea:	bb bb       	out	0x1b, r27	; 27
PORTB=0b11100001;
 1ec:	48 bb       	out	0x18, r20	; 24
 1ee:	c9 01       	movw	r24, r18
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <main+0x9e>
{
while((PIND&0x02)==0)
{
l();
}
while((PIND&0x0f)==0x0f)
 1f4:	80 b3       	in	r24, 0x10	; 16
 1f6:	8f 70       	andi	r24, 0x0F	; 15
 1f8:	8f 30       	cpi	r24, 0x0F	; 15
 1fa:	69 f3       	breq	.-38     	; 0x1d6 <main+0x84>
{
Bl();
}
}
if((PIND&0x04)==0)
 1fc:	82 9b       	sbis	0x10, 2	; 16
 1fe:	06 c0       	rjmp	.+12     	; 0x20c <main+0xba>
 200:	1b c0       	rjmp	.+54     	; 0x238 <main+0xe6>
_delay_ms(1);
}

void l()
{
PORTA=0;
 202:	1b ba       	out	0x1b, r1	; 27
PORTB=0;
 204:	18 ba       	out	0x18, r1	; 24
 206:	c9 01       	movw	r24, r18
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <main+0xb6>
Bl();
}
}
if((PIND&0x04)==0)
{
while((PIND&0x04)==0)
 20c:	82 9b       	sbis	0x10, 2	; 16
 20e:	f9 cf       	rjmp	.-14     	; 0x202 <main+0xb0>
 210:	0f c0       	rjmp	.+30     	; 0x230 <main+0xde>
_delay_ms(1);
}

void Cl()
{
PORTA=0b01111110;
 212:	eb bb       	out	0x1b, r30	; 27
PORTB=0b11111110;
 214:	58 bb       	out	0x18, r21	; 24
 216:	c9 01       	movw	r24, r18
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <main+0xc6>
_delay_ms(1);
PORTA=0b10000001;
 21c:	7b bb       	out	0x1b, r23	; 27
PORTB=0b11100001;
 21e:	48 bb       	out	0x18, r20	; 24
 220:	c9 01       	movw	r24, r18
 222:	01 97       	sbiw	r24, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <main+0xd0>
_delay_ms(1);
PORTA=0b01000010;
 226:	ab bb       	out	0x1b, r26	; 27
PORTB=0b11011111;
 228:	68 bb       	out	0x18, r22	; 24
 22a:	c9 01       	movw	r24, r18
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	f1 f7       	brne	.-4      	; 0x22c <main+0xda>
{
while((PIND&0x04)==0)
{
l();
}
while((PIND&0x0f)==0x0f)
 230:	80 b3       	in	r24, 0x10	; 16
 232:	8f 70       	andi	r24, 0x0F	; 15
 234:	8f 30       	cpi	r24, 0x0F	; 15
 236:	69 f3       	breq	.-38     	; 0x212 <main+0xc0>
{
Cl();
}
}
if((PIND&0x08)==0)
 238:	83 99       	sbic	0x10, 3	; 16
 23a:	a4 cf       	rjmp	.-184    	; 0x184 <main+0x32>
 23c:	05 c0       	rjmp	.+10     	; 0x248 <main+0xf6>
_delay_ms(1);
}

void l()
{
PORTA=0;
 23e:	1b ba       	out	0x1b, r1	; 27
PORTB=0;
 240:	18 ba       	out	0x18, r1	; 24
 242:	c9 01       	movw	r24, r18
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	f1 f7       	brne	.-4      	; 0x244 <main+0xf2>
Cl();
}
}
if((PIND&0x08)==0)
{
while((PIND&0x08)==0)
 248:	83 9b       	sbis	0x10, 3	; 16
 24a:	f9 cf       	rjmp	.-14     	; 0x23e <main+0xec>
 24c:	0f c0       	rjmp	.+30     	; 0x26c <main+0x11a>
_delay_ms(1);
}

void Dl()
{
PORTA=0b11111111;
 24e:	fb bb       	out	0x1b, r31	; 27
PORTB=0b11111110;
 250:	58 bb       	out	0x18, r21	; 24
 252:	c9 01       	movw	r24, r18
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <main+0x102>
_delay_ms(1);
PORTA=0b10000001;
 258:	7b bb       	out	0x1b, r23	; 27
PORTB=0b11100001;
 25a:	48 bb       	out	0x18, r20	; 24
 25c:	c9 01       	movw	r24, r18
 25e:	01 97       	sbiw	r24, 0x01	; 1
 260:	f1 f7       	brne	.-4      	; 0x25e <main+0x10c>
_delay_ms(1);
PORTA=0b01111110;
 262:	eb bb       	out	0x1b, r30	; 27
PORTB=0b11011111;
 264:	68 bb       	out	0x18, r22	; 24
 266:	c9 01       	movw	r24, r18
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	f1 f7       	brne	.-4      	; 0x268 <main+0x116>
{
while((PIND&0x08)==0)
{
l();
}
while((PIND&0x0f)==0x0f)
 26c:	80 b3       	in	r24, 0x10	; 16
 26e:	8f 70       	andi	r24, 0x0F	; 15
 270:	8f 30       	cpi	r24, 0x0F	; 15
 272:	09 f0       	breq	.+2      	; 0x276 <main+0x124>
 274:	87 cf       	rjmp	.-242    	; 0x184 <main+0x32>
 276:	eb cf       	rjmp	.-42     	; 0x24e <main+0xfc>

00000278 <_exit>:
 278:	f8 94       	cli

0000027a <__stop_program>:
 27a:	ff cf       	rjmp	.-2      	; 0x27a <__stop_program>
